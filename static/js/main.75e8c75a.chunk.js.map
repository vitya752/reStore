{"version":3,"sources":["actions/index.js","components/Categories/Categories.js","components/BookListItem/BookListItem.js","components/BookstoreServiceContext/BookstoreServiceContext.js","components/hoc/with-bookstore-service.js","components/Spinner/Spinner.js","components/ErrorIndicator/ErrorIndicator.js","components/BookList/BookList.js","components/pages/HomePage.js","components/ShoppingCartTable/ShoppingCartTable.js","components/pages/CartPage.js","components/Search/Search.js","components/ShopHeader/ShopHeader.js","components/App/App.js","components/ErrorBoundry/ErrorBoundry.js","services/BookstoreService.js","reducers/updateBookList.js","reducers/updateShoppingCart.js","reducers/updateFilter.js","reducers/index.js","store.js","index.js"],"names":["booksLoaded","newBooks","type","payload","booksRequested","booksError","error","bookAddedToCart","bookId","bookDeletedFromCart","bookDecreaseCart","formSubmitSearchTerm","searchTerm","checkboxChangeStatus","name","onChangeCheckbox","e","id","connect","state","categories","filter","dispatch","bindActionCreators","className","map","idx","label","checked","key","value","onChange","event","htmlFor","BookListItem","book","onAddedToCart","title","author","price","img","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","Spinner","ErrorIndicator","BookListContainer","this","getBooks","then","data","catch","err","books","loading","checkedCategories","console","log","renderBooks","onFilter","Component","BookList","length","category","some","bookList","HomePage","items","shoppingCart","cartItems","total","orderTotal","item","count","renderRow","CartPage","SearchContainer","onChangeTerm","setState","target","onSubmit","preventDefault","disableSubmit","Search","placeholder","ShopHeader","numItems","to","role","path","component","exact","ErrorBoundry","hasError","children","BookstoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateOrder","quantity","find","cartItemIndex","findIndex","cartItem","resultCartItems","newCartItem","slice","updateCartItems","toFixed","updateCartItem","reduce","a","b","updateShoppingCart","updateCategories","checkId","indexItem","newCategories","updateCategory","updateCheckedCategories","newItem","updateFilter","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75e8c75a.chunk.js","sourcesContent":["const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'BOOKS_LOADED',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'BOOKS_REQUESTED'\r\n    }\r\n}\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'BOOKS_ERROR',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDeletedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DELETED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDecreaseCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DECREASE_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst formSubmitSearchTerm = (searchTerm) => {\r\n    return {\r\n        type: 'FORM_SUBMIT_SEARCH_TERM',\r\n        payload: searchTerm\r\n    }\r\n}\r\n\r\nconst checkboxChangeStatus = (name) => {\r\n    return {\r\n        type: 'CHECKBOX_CHANGE_STATUS',\r\n        payload: name\r\n    }\r\n}\r\n\r\nexport {\r\n    booksLoaded,\r\n    booksRequested,\r\n    booksError,\r\n    bookAddedToCart,\r\n    bookDeletedFromCart,\r\n    bookDecreaseCart,\r\n    formSubmitSearchTerm,\r\n    checkboxChangeStatus\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { checkboxChangeStatus } from './../../actions';\r\nimport './Categories.css';\r\n\r\nconst Categories = ({ categories, checkboxChangeStatus }) => {\r\n    return (\r\n        <ul className=\"col-12 col-lg-3 list-group genres\">\r\n            {\r\n                categories.map(({ id, label, name, checked }, idx) => {\r\n                    return (\r\n                        <li \r\n                            key={idx}\r\n                            className=\"list-group-item genres-item\">\r\n                            <div className=\"form-check\">\r\n                                <input \r\n                                    className=\"form-check-input\" \r\n                                    type=\"checkbox\" \r\n                                    value={name} \r\n                                    id={name}\r\n                                    onChange={(event) => onChangeCheckbox(event, checkboxChangeStatus, id)}\r\n                                    checked={checked} />\r\n                                <div className=\"check-indicator\"></div>\r\n                                <label className=\"form-check-label\" htmlFor={name}>\r\n                                    {label}\r\n                                </label>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst onChangeCheckbox = (e, checkboxChangeStatus, id) => {\r\n    checkboxChangeStatus(id);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.filter.categories\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        checkboxChangeStatus\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React from 'react';\r\nimport './BookListItem.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, img } = book;\r\n    return(\r\n        <div className=\"book-list-item mb-3\">\r\n            <div className=\"book-cover\">\r\n                <img src={img} alt={title} />\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button \r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info add-to-cart\">\r\n                    Add to cart\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookListItem;","import React from 'react';\r\n\r\nconst {\r\n    Provider : BookstoreServiceProvider,\r\n    Consumer : BookstoreServiceConsumer\r\n} = React.createContext(); \r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n}","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return <Wrapped {...props} bookstoreService={bookstoreService} />\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default withBookstoreService;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div>loading...</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return(\r\n        <div>Error Fuck!!!</div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport BookListItem from '../BookListItem/BookListItem';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport withBookstoreService from './../hoc/with-bookstore-service';\r\nimport { booksLoaded, booksRequested, booksError, bookAddedToCart } from './../../actions';\r\nimport './BookList.css';\r\nimport Spinner from './../Spinner/Spinner';\r\nimport ErrorIndicator from './../ErrorIndicator/ErrorIndicator';\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { bookstoreService, \r\n                booksLoaded, \r\n                booksRequested, \r\n                booksError } = this.props;\r\n        booksRequested();\r\n        bookstoreService.getBooks()\r\n            .then((data) => booksLoaded(data))\r\n            .catch((err) => booksError(err));\r\n    }\r\n\r\n    render() {\r\n        const { books, error, loading, bookAddedToCart, searchTerm, checkedCategories } = this.props;\r\n        // const renderBooks = onSearch(books, searchTerm);\r\n        console.log(checkedCategories);\r\n        const renderBooks = onFilter(books, checkedCategories);\r\n        if( error ) {\r\n            return <ErrorIndicator />\r\n        }\r\n        if( loading ) {\r\n            return <Spinner />\r\n        }\r\n        return(\r\n            <BookList \r\n                books={renderBooks} \r\n                onAddedToCart={bookAddedToCart} />\r\n        )\r\n    }\r\n}\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n    return(\r\n        <ul className=\"row col-12 col-lg-9 book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li \r\n                            className=\"col-6 col-sm-3\"\r\n                            key={book.id}>\r\n                            <BookListItem \r\n                                onAddedToCart={() => onAddedToCart(book.id)}\r\n                                book={book} />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst onSearch = (books, searchTerm) => {\r\n    if( searchTerm.length === 0 ) return books;\r\n    return books.filter(({title}) => title.toLowerCase().includes(searchTerm.toLowerCase()) !== false );\r\n};\r\n\r\nconst onFilter = (books, checkedCategories) => {\r\n    // console.log(checkedCategories);\r\n    if( checkedCategories.length === 0 ) return books;\r\n    return books.filter(({category}) => checkedCategories.some(({name}) => category === name));\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.bookList.books,\r\n        loading: state.bookList.loading,\r\n        error: state.bookList.error,\r\n        searchTerm: state.filter.searchTerm,\r\n        checkedCategories: state.filter.checkedCategories\r\n        /* \r\n        передать свойство books в компонент (this.props.books), \r\n        значение которого взято из state\r\n        */\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        booksLoaded,\r\n        booksRequested,\r\n        booksError,\r\n        bookAddedToCart\r\n    }, dispatch);\r\n};\r\n/*\r\nПервый аргумент: обьект с action creators, \r\nкоторые будут нужны в этом компоненте!!!\r\nКак только мы вызовем booksLoaded, то bindActionCreators \r\nсоздаст действие и передаст все в метод dispatch\r\n\r\nАльтернатива:\r\nconst mapDispatchToProps = {\r\n    booksLoaded\r\n}\r\n*/\r\n\r\nexport default withBookstoreService()(connect(mapStateToProps, mapDispatchToProps)(BookListContainer));","import React from 'react';\r\nimport Categories from '../Categories/Categories';\r\nimport BookList from '../BookList/BookList';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <Categories />\r\n            <BookList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    bookAddedToCart, \r\n    bookDecreaseCart, \r\n    bookDeletedFromCart } from './../../actions';\r\nimport './ShoppingCartTable.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, bookAddedToCart, bookDecreaseCart, bookDeletedFromCart }) => {\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n        return(\r\n            <tr key={idx}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button \r\n                        onClick={ () => bookAddedToCart(id) }\r\n                        className=\"btn btn-outline-success\">\r\n                        <i className=\"fa fa-plus-circle\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDeletedFromCart(id) }\r\n                        className=\"btn btn-outline-danger\">\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDecreaseCart(id) }\r\n                        className=\"btn btn-outline-warning\">\r\n                        <i className=\"fa fa-minus-circle\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return(\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        items.map((item, idx) => renderRow(item, idx))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.shoppingCart.cartItems,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        bookDeletedFromCart,\r\n        bookAddedToCart,\r\n        bookDecreaseCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\r\nimport ShoppingCartTable from './../ShoppingCartTable/ShoppingCartTable';\r\n\r\nconst CartPage = () => {\r\n    return(\r\n        <ShoppingCartTable />\r\n    )\r\n}\r\n\r\nexport default CartPage;","import React, { Component } from 'react';\r\nimport { formSubmitSearchTerm } from './../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchContainer extends Component {\r\n    state = {\r\n        searchTerm: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Search \r\n                onSubmit={this.onSubmit} \r\n                onChangeTerm={this.onChangeTerm} \r\n                searchTerm={this.state.searchTerm}\r\n                disableSubmit={this.state.disableSubmit} />\r\n        );\r\n    }\r\n\r\n    onChangeTerm = (e) => {\r\n        this.setState({\r\n            searchTerm: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const { formSubmitSearchTerm } = this.props;\r\n        e.preventDefault();\r\n        formSubmitSearchTerm(this.state.searchTerm);\r\n    }\r\n\r\n}\r\n\r\nconst Search = ({ onSubmit, onChangeTerm, searchTerm, disableSubmit }) => {\r\n    return (\r\n        <form \r\n            className=\"col-12 col-md-6\"\r\n            onSubmit={onSubmit}>\r\n            <div className=\"input-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Search\"\r\n                    onChange={onChangeTerm}\r\n                    value={searchTerm}\r\n                    />\r\n                <div className=\"input-group-append\">\r\n                    <button \r\n                        className=\"btn btn-primary\" \r\n                        type=\"submit\" >Search</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        formSubmitSearchTerm\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Search from './../Search/Search';\r\nimport './ShopHeader.css';\r\n\r\nconst ShopHeader = ({numItems, total}) => {\r\n    return(\r\n        <header className=\"row shop-header mb-3\">\r\n            <Link to=\"/\" className=\"col-12 col-md-3 logo text-dark\">ReStore</Link>\r\n            <Search />\r\n            <Link to=\"/cart\">\r\n                <i className=\"col-12 col-md-3 icon-cart fa fa-shopping-cart\"></i>\r\n                {numItems} items (${total})\r\n            </Link>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { \r\n    HomePage,\r\n    CartPage\r\n} from './../pages';\r\nimport ShopHeader from './../ShopHeader/ShopHeader';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({ numItems, total }) => {\r\n    return(\r\n        <main className=\"container\" role=\"main\">\r\n            <ShopHeader numItems={numItems} total={total} />\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact />\r\n                <Route path=\"/cart\" component={CartPage} />\r\n            </Switch>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numItems: state.shoppingCart.cartItems.length,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if ( this.state.hasError ) return <ErrorIndicator></ErrorIndicator>\r\n        return this.props.children;\r\n    }\r\n}","export default class BookstoreService {\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Metro 2033',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 3.36,\r\n            category: 'fantasy',\r\n            img: 'https://images2.medimops.eu/product/7a56c9/M03453529685-source.jpg'    \r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Metro 2034',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 3.99,\r\n            category: 'post-apocalyptic',\r\n            img: 'https://images2.medimops.eu/product/230384/M03453316312-source.jpg'\r\n        }\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // if( Math.random() > 0.75 ) {\r\n                //     reject(new Error('Something bad!!!'));\r\n                // }else{\r\n                //     resolve(this.data);\r\n                // }\r\n                resolve(this.data);\r\n            }, 700);\r\n        });\r\n    }\r\n\r\n}","const updateBookList = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOKS_REQUESTED': \r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'BOOKS_LOADED':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case 'BOOKS_ERROR':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            } \r\n        default:\r\n            return state.bookList;      \r\n    }\r\n};\r\n\r\nexport default updateBookList;","const updateShoppingCart = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n        case 'BOOK_DECREASE_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n        case 'BOOK_DELETED_FROM_CART':\r\n            const cartItem = state.shoppingCart.cartItems.find((item) => item.id === action.payload);\r\n            return updateOrder(state, action.payload, -cartItem.count);\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n};\r\n\r\nconst updateCartItem = (book, cartItem = {}, quantity) => {\r\n\r\n    const { \r\n        id = book.id,\r\n        count = 0,\r\n        title = book.title,\r\n        total = 0 } = cartItem;\r\n    \r\n    return {\r\n        id: id,\r\n        title: title,\r\n        count: count + quantity,\r\n        total: +(total + (quantity*book.price)).toFixed(2)\r\n    }\r\n};\r\n\r\nconst updateCartItems = (cartItems, newCartItem, cartItemIndex) => {\r\n\r\n    if( newCartItem.count === 0 ) {\r\n        return [\r\n            ...cartItems.slice(0, cartItemIndex),\r\n            ...cartItems.slice(cartItemIndex + 1)\r\n        ] \r\n    }\r\n\r\n    if( cartItemIndex === -1 ) {\r\n        return [\r\n            ...cartItems,\r\n            newCartItem          \r\n        ]\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0, cartItemIndex),\r\n        newCartItem,\r\n        ...cartItems.slice(cartItemIndex + 1)\r\n    ]\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems }} = state;\r\n    //ищем книгу по id\r\n    const book = books.find((item) => bookId === item.id );\r\n    //ищем позицию в корзине по id книги, если книга в корзине\r\n    //иначе -1\r\n    const cartItemIndex = cartItems.findIndex(({id}) => id === book.id); \r\n    //если cartItemIndex === -1, то item = undefined\r\n    const cartItem = cartItems[cartItemIndex];\r\n    const newCartItem = updateCartItem(book, cartItem, quantity);\r\n    const resultCartItems = updateCartItems(cartItems, newCartItem, cartItemIndex);\r\n    return {\r\n        cartItems: resultCartItems,\r\n        orderTotal: resultCartItems.map(( {total} ) => total ).reduce((a = 0, b = 0) => a + b, 0)\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart;","const updateFilter = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            searchTerm: '',\r\n            categories: [\r\n                { id: 1, label: 'Post-apocalyptic', name: 'post-apocalyptic', checked: false },\r\n                { id: 2, label: 'Fantasy', name: 'fantasy', checked: false },\r\n                { id: 3, label: 'Horror', name: 'horror', checked: false }\r\n            ],\r\n            checkedCategories: []\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'FORM_SUBMIT_SEARCH_TERM':\r\n            return {\r\n                ...state.filter,\r\n                searchTerm: action.payload\r\n            }\r\n        case 'CHECKBOX_CHANGE_STATUS':\r\n            return updateCategories(state, action.payload)\r\n        default:\r\n            return state.filter;\r\n    }\r\n\r\n}\r\n\r\nconst updateCategories = (state, checkId) => {\r\n    const { filter: { categories } } = state;\r\n    const indexItem = categories.findIndex(({id}) => id === checkId);\r\n    const newCategories = updateCategory(categories, indexItem);\r\n    return {\r\n        ...state.filter,\r\n        categories: newCategories,\r\n        checkedCategories: updateCheckedCategories(newCategories)\r\n    }\r\n};\r\n\r\nconst updateCategory = (categories, indexItem) => {\r\n    const item = categories[indexItem];\r\n    const newItem = { ...item, checked: !item.checked };\r\n    return [\r\n        ...categories.slice(0, indexItem),\r\n        newItem,\r\n        ...categories.slice(indexItem + 1)\r\n    ]\r\n};\r\n\r\nconst updateCheckedCategories = (categories) => {\r\n    const checkedCategories = categories.filter(({checked}) => checked === true);\r\n    return checkedCategories.map(({id, name}) => {\r\n        return { \r\n            id: id, \r\n            name: name \r\n        }\r\n    });\r\n};\r\n\r\nexport default updateFilter;","import updateBookList from './updateBookList';\r\nimport updateShoppingCart from './updateShoppingCart';\r\nimport updateFilter from './updateFilter';\r\n\r\nconst reducer = (state, action) => {\r\n    // console.log(action.type);\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action),\r\n        filter: updateFilter(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nimport App from './components/App/App';\r\nimport ErrorBoundry from './components/ErrorBoundry/ErrorBoundry';\r\nimport BookstoreService from './services/BookstoreService';\r\nimport { BookstoreServiceProvider } from './components/BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <ErrorBoundry>\r\n        <BookstoreServiceProvider value={bookstoreService}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n</Provider>\r\n, document.getElementById('root'));"],"sourceRoot":""}