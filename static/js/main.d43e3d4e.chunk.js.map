{"version":3,"sources":["components/BookListItem/BookListItem.js","components/BookstoreServiceContext/BookstoreServiceContext.js","components/hoc/with-bookstore-service.js","actions/index.js","components/Spinner/Spinner.js","components/ErrorIndicator/ErrorIndicator.js","components/BookList/BookList.js","components/pages/HomePage.js","components/ShoppingCartTable/ShoppingCartTable.js","components/pages/CartPage.js","components/ShopHeader/ShopHeader.js","components/App/App.js","components/ErrorBoundry/ErrorBoundry.js","services/BookstoreService.js","reducers/updateBookList.js","reducers/updateShoppingCart.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","onAddedToCart","title","author","price","img","className","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","booksLoaded","newBooks","type","payload","booksRequested","booksError","error","bookAddedToCart","bookId","bookDeletedFromCart","bookDecreaseCart","Spinner","ErrorIndicator","BookListContainer","this","getBooks","then","data","catch","err","books","loading","Component","BookList","map","key","id","connect","state","bookList","dispatch","bindActionCreators","HomePage","items","shoppingCart","cartItems","total","orderTotal","item","idx","count","renderRow","CartPage","ShopHeader","numItems","to","length","role","path","component","exact","ErrorBoundry","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateOrder","quantity","find","cartItemIndex","findIndex","cartItem","resultCartItems","newCartItem","slice","updateCartItems","toFixed","updateCartItem","reduce","a","b","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.d43e3d4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './BookListItem.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, img } = book;\r\n    return(\r\n        <div className=\"book-list-item mb-3\">\r\n            <div className=\"book-cover\">\r\n                <img src={img} alt={title} />\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button \r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info add-to-cart\">\r\n                    Add to cart\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookListItem;","import React from 'react';\r\n\r\nconst {\r\n    Provider : BookstoreServiceProvider,\r\n    Consumer : BookstoreServiceConsumer\r\n} = React.createContext(); \r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n}","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return <Wrapped {...props} bookstoreService={bookstoreService} />\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default withBookstoreService;","const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'BOOKS_LOADED',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'BOOKS_REQUESTED'\r\n    }\r\n}\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'BOOKS_ERROR',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDeletedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DELETED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDecreaseCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DECREASE_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport {\r\n    booksLoaded,\r\n    booksRequested,\r\n    booksError,\r\n    bookAddedToCart,\r\n    bookDeletedFromCart,\r\n    bookDecreaseCart\r\n}","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div>loading...</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return(\r\n        <div>Error Fuck!!!</div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport BookListItem from '../BookListItem/BookListItem';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport withBookstoreService from './../hoc/with-bookstore-service';\r\nimport { booksLoaded, booksRequested, booksError, bookAddedToCart } from './../../actions';\r\nimport './BookList.css';\r\nimport Spinner from './../Spinner/Spinner';\r\nimport ErrorIndicator from './../ErrorIndicator/ErrorIndicator';\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { bookstoreService, \r\n                booksLoaded, \r\n                booksRequested, \r\n                booksError } = this.props;\r\n        booksRequested();\r\n        bookstoreService.getBooks()\r\n            .then((data) => booksLoaded(data))\r\n            .catch((err) => booksError(err));\r\n    }\r\n\r\n    render() {\r\n        const { books, error, loading, bookAddedToCart } = this.props;\r\n        if( error ) {\r\n            return <ErrorIndicator />\r\n        }\r\n        if( loading ) {\r\n            return <Spinner />\r\n        }\r\n        return(\r\n            <BookList books={books} onAddedToCart={bookAddedToCart} />\r\n        )\r\n    }\r\n}\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n    return(\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem \r\n                                onAddedToCart={() => onAddedToCart(book.id)}\r\n                                book={book} />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.bookList.books,\r\n        loading: state.bookList.loading,\r\n        error: state.bookList.error\r\n        /* \r\n        передать свойство books в компонент (this.props.books), \r\n        значение которого взято из state\r\n        */\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        booksLoaded,\r\n        booksRequested,\r\n        booksError,\r\n        bookAddedToCart\r\n    }, dispatch);\r\n};\r\n/*\r\nПервый аргумент: обьект с action creators, \r\nкоторые будут нужны в этом компоненте!!!\r\nКак только мы вызовем booksLoaded, то bindActionCreators \r\nсоздаст действие и передаст все в метод dispatch\r\n\r\nАльтернатива:\r\nconst mapDispatchToProps = {\r\n    booksLoaded\r\n}\r\n*/\r\n\r\nexport default withBookstoreService()(connect(mapStateToProps, mapDispatchToProps)(BookListContainer));","import React from 'react';\r\nimport BookList from '../BookList/BookList';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <BookList />\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    bookAddedToCart, \r\n    bookDecreaseCart, \r\n    bookDeletedFromCart } from './../../actions';\r\nimport './ShoppingCartTable.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, bookAddedToCart, bookDecreaseCart, bookDeletedFromCart }) => {\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n        return(\r\n            <tr key={idx}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button \r\n                        onClick={ () => bookAddedToCart(id) }\r\n                        className=\"btn btn-outline-success\">\r\n                        <i className=\"fa fa-plus-circle\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDeletedFromCart(id) }\r\n                        className=\"btn btn-outline-danger\">\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDecreaseCart(id) }\r\n                        className=\"btn btn-outline-warning\">\r\n                        <i className=\"fa fa-minus-circle\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return(\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        items.map((item, idx) => renderRow(item, idx))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.shoppingCart.cartItems,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        bookDeletedFromCart,\r\n        bookAddedToCart,\r\n        bookDecreaseCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\r\nimport ShoppingCartTable from './../ShoppingCartTable/ShoppingCartTable';\r\n\r\nconst CartPage = () => {\r\n    return(\r\n        <ShoppingCartTable />\r\n    )\r\n}\r\n\r\nexport default CartPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ShopHeader.css';\r\n\r\nconst ShopHeader = ({numItems, total}) => {\r\n    return(\r\n        <header className=\"shop-header mb-3\">\r\n            <Link to=\"/\" className=\"logo text-dark\">ReStore</Link>\r\n            <Link to=\"/cart\">\r\n                <i className=\"icon-cart fa fa-shopping-cart\"></i>\r\n                {numItems} items (${total})\r\n            </Link>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { \r\n    HomePage,\r\n    CartPage\r\n} from './../pages';\r\nimport ShopHeader from './../ShopHeader/ShopHeader';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({ numItems, total }) => {\r\n    return(\r\n        <main className=\"container\" role=\"main\">\r\n            <ShopHeader numItems={numItems} total={total} />\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact />\r\n                <Route path=\"/cart\" component={CartPage} />\r\n            </Switch>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numItems: state.shoppingCart.cartItems.length,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if ( this.state.hasError ) return <ErrorIndicator></ErrorIndicator>\r\n        return this.props.children;\r\n    }\r\n}","export default class BookstoreService {\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Metro 2033',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 3.36,\r\n            img: 'https://d1b14unh5d6w7g.cloudfront.net/3453529685.01.S001.LXXXXXXX.jpg?Expires=1570540167&Signature=Hc4gX398+fIhXbJWHETc3qw5qh0ND/f+xeoedLHEong2wsAHN8vWv01W3NVJVtKxQB38FrM084mOe5lC4MKmGgoiYpgL+/sr9EdwmRNLJ3t4/efkjR1lKmxVQMr6Cic9eKMRXBLFm1hN7VcQeY5wKaClLuRU9tqyqy+ZkN78GXQ=&Key-Pair-Id=APKAIUO27P366FGALUMQ'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Metro 2034',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 3.99,\r\n            img: 'https://d1b14unh5d6w7g.cloudfront.net/3453316312.01.S001.LXXXXXXX.jpg?Expires=1570540260&Signature=DftYhP8Nx1E3MA7myP5hGr6+OaRDIO8tKhEYoBoES+AAvt+jFwznoABPV8M1j6YmerVGESA19inWhpPqcQqHY5pwrEarb1kzsD0uKLDa4rU5FN4xX158/eIDmJ9nUL/eMAw5cZFA/HooACnvdbeGZpJQeyWjqLp2MbwplDvkhAw=&Key-Pair-Id=APKAIUO27P366FGALUMQ'\r\n        }\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if( Math.random() > 0.75 ) {\r\n                    reject(new Error('Something bad!!!'));\r\n                }else{\r\n                    resolve(this.data);\r\n                }\r\n            }, 700);\r\n        });\r\n    }\r\n\r\n}","const updateBookList = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOKS_REQUESTED': \r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'BOOKS_LOADED':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case 'BOOKS_ERROR':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            } \r\n        default:\r\n            return state.bookList;      \r\n    }\r\n};\r\n\r\nexport default updateBookList;","const updateShoppingCart = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n        case 'BOOK_DECREASE_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n        case 'BOOK_DELETED_FROM_CART':\r\n            const cartItem = state.shoppingCart.cartItems.find((item) => item.id === action.payload);\r\n            return updateOrder(state, action.payload, -cartItem.count);\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n};\r\n\r\nconst updateCartItem = (book, cartItem = {}, quantity) => {\r\n\r\n    const { \r\n        id = book.id,\r\n        count = 0,\r\n        title = book.title,\r\n        total = 0 } = cartItem;\r\n    \r\n    return {\r\n        id: id,\r\n        title: title,\r\n        count: count + quantity,\r\n        total: +(total + (quantity*book.price)).toFixed(2)\r\n    }\r\n};\r\n\r\nconst updateCartItems = (cartItems, newCartItem, cartItemIndex) => {\r\n\r\n    if( newCartItem.count === 0 ) {\r\n        return [\r\n            ...cartItems.slice(0, cartItemIndex),\r\n            ...cartItems.slice(cartItemIndex + 1)\r\n        ] \r\n    }\r\n\r\n    if( cartItemIndex === -1 ) {\r\n        return [\r\n            ...cartItems,\r\n            newCartItem          \r\n        ]\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0, cartItemIndex),\r\n        newCartItem,\r\n        ...cartItems.slice(cartItemIndex + 1)\r\n    ]\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems }} = state;\r\n    //ищем книгу по id\r\n    const book = books.find((item) => bookId === item.id );\r\n    //ищем позицию в корзине по id книги, если книга в корзине\r\n    //иначе -1\r\n    const cartItemIndex = cartItems.findIndex(({id}) => id === book.id); \r\n    //если cartItemIndex === -1, то item = undefined\r\n    const cartItem = cartItems[cartItemIndex];\r\n    const newCartItem = updateCartItem(book, cartItem, quantity);\r\n    const resultCartItems = updateCartItems(cartItems, newCartItem, cartItemIndex);\r\n    return {\r\n        cartItems: resultCartItems,\r\n        orderTotal: resultCartItems.map(( {total} ) => total ).reduce((a = 0, b = 0) => a + b, 0)\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart;","import updateBookList from './updateBookList';\r\nimport updateShoppingCart from './updateShoppingCart';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nimport App from './components/App/App';\r\nimport ErrorBoundry from './components/ErrorBoundry/ErrorBoundry';\r\nimport BookstoreService from './services/BookstoreService';\r\nimport { BookstoreServiceProvider } from './components/BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <ErrorBoundry>\r\n        <BookstoreServiceProvider value={bookstoreService}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n</Provider>\r\n, document.getElementById('root'));"],"sourceRoot":""}