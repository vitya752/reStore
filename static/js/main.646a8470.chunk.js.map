{"version":3,"sources":["actions/index.js","components/SortFilter/SortFilter.js","components/CategoriesFilter/CategoriesFilter.js","components/PriceFilter/PriceFilter.js","components/Filter/Filter.js","components/BookListItem/BookListItem.js","components/BookstoreServiceContext/BookstoreServiceContext.js","components/hoc/with-bookstore-service.js","components/Spinner/Spinner.js","components/ErrorIndicator/ErrorIndicator.js","components/BookList/BookList.js","components/pages/HomePage.js","components/ShoppingCartTable/ShoppingCartTable.js","components/pages/CartPage.js","components/pages/BookPage.js","components/Search/Search.js","components/ShopHeader/ShopHeader.js","components/App/App.js","components/ErrorBoundry/ErrorBoundry.js","services/BookstoreService.js","reducers/updateBookList.js","reducers/updateShoppingCart.js","reducers/updateFilter.js","reducers/index.js","store.js","index.js"],"names":["booksLoaded","newBooks","type","payload","booksRequested","booksError","error","bookAddedToCart","bookId","bookDeletedFromCart","bookDecreaseCart","formSubmitSearchTerm","searchTerm","checkboxChangeStatus","name","maxPriceChangeValue","value","sortChangeValue","console","log","onChangeSort","e","target","selectedIndex","connect","state","sortTypes","filter","selectedSort","dispatch","bindActionCreators","renderSortTypes","map","item","key","label","className","onChange","onChangeCheckbox","id","categories","idx","checked","event","htmlFor","maxPrice","xmax","axis","x","Filter","openFilter","onClickFilter","setState","window","innerWidth","this","onClick","Component","BookListItem","book","onAddedToCart","title","author","price","img","src","alt","to","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","Spinner","ErrorIndicator","BookListContainer","getBooks","then","data","catch","err","books","loading","checkedCategories","renderBooks","onSearch","onCategoriesFilter","onMaxPriceFilter","onSortFilter","BookList","length","toLowerCase","includes","category","some","sortValue","onFilter","property","quantity","sort","a","b","bookList","HomePage","items","shoppingCart","cartItems","total","orderTotal","count","renderRow","CartPage","BookPageContainer","description","getBook","BookPage","SearchContainer","onChangeTerm","onSubmit","preventDefault","disableSubmit","Search","placeholder","ShopHeader","numItems","role","path","component","exact","render","match","params","ErrorBoundry","hasError","children","BookstoreService","Promise","resolve","find","reject","setTimeout","updateBookList","action","undefined","updateOrder","cartItemIndex","findIndex","cartItem","resultCartItems","newCartItem","slice","updateCartItems","toFixed","updateCartItem","reduce","updateShoppingCart","updateCategories","checkId","indexItem","newCategories","updateCategory","updateCheckedCategories","newItem","updateFilter","reducer","store","createStore","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.646a8470.chunk.js","sourcesContent":["const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'BOOKS_LOADED',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'BOOKS_REQUESTED'\r\n    }\r\n}\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'BOOKS_ERROR',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDeletedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DELETED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDecreaseCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DECREASE_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst formSubmitSearchTerm = (searchTerm) => {\r\n    return {\r\n        type: 'FORM_SUBMIT_SEARCH_TERM',\r\n        payload: searchTerm\r\n    }\r\n}\r\n\r\nconst checkboxChangeStatus = (name) => {\r\n    return {\r\n        type: 'CHECKBOX_CHANGE_STATUS',\r\n        payload: name\r\n    }\r\n}\r\n\r\nconst maxPriceChangeValue = (value) => {\r\n    return {\r\n        type: 'MAXPRICE_CHANGE_VALUE',\r\n        payload: value\r\n    }\r\n}\r\n\r\nconst sortChangeValue = (value) => {\r\n    console.log(value);\r\n    return {\r\n        type: 'SORT_CHANGE_VALUE',\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport {\r\n    booksLoaded,\r\n    booksRequested,\r\n    booksError,\r\n    bookAddedToCart,\r\n    bookDeletedFromCart,\r\n    bookDecreaseCart,\r\n    formSubmitSearchTerm,\r\n    checkboxChangeStatus,\r\n    maxPriceChangeValue,\r\n    sortChangeValue\r\n}","import React from 'react';\r\nimport { sortChangeValue } from './../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SortFilter = ({ sortTypes, selectedSort, sortChangeValue }) => {\r\n    const renderSortTypes = sortTypes.map((item) => {\r\n        return (\r\n            <option key={item.value} value={item.value}>{item.label}</option>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"filter mb-3\">\r\n            <h2 className=\"name-filter\">Sort</h2>\r\n            <select \r\n                className=\"form-control select-custom\" \r\n                onChange={(e) => onChangeSort(e, sortChangeValue)}\r\n                value={selectedSort}>\r\n                { renderSortTypes }\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst onChangeSort = (e, sortChangeValue) => {\r\n    sortChangeValue(e.target[e.target.selectedIndex].value);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sortTypes: state.filter.sortTypes,\r\n        selectedSort: state.filter.selectedSort\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        sortChangeValue\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortFilter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { checkboxChangeStatus } from '../../actions';\r\nimport './CategoriesFilter.css';\r\n\r\nconst CategoriesFilter = ({ categories, checkboxChangeStatus }) => {\r\n    return (\r\n        <div className=\"filter mb-3\">\r\n            <span className=\"name-filter\">Genres</span>\r\n            <ul className=\"list-group genres mb-3\">\r\n                {\r\n                    categories.map(({ id, label, name, checked }, idx) => {\r\n                        return (\r\n                            <li \r\n                                key={idx}\r\n                                className=\"list-group-item genres-item\">\r\n                                <div className=\"form-check\">\r\n                                    <input \r\n                                        className=\"form-check-input\" \r\n                                        type=\"checkbox\" \r\n                                        value={name} \r\n                                        id={name}\r\n                                        onChange={(event) => onChangeCheckbox(event, checkboxChangeStatus, id)}\r\n                                        checked={checked} />\r\n                                    <div className=\"check-indicator\"></div>\r\n                                    <label className=\"form-check-label\" htmlFor={name}>\r\n                                        {label}\r\n                                    </label>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst onChangeCheckbox = (e, checkboxChangeStatus, id) => {\r\n    checkboxChangeStatus(id);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.filter.categories\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        checkboxChangeStatus\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesFilter);","import React from 'react';\r\nimport Slider from 'react-input-slider';\r\nimport './PriceFilter.css';\r\nimport { maxPriceChangeValue } from './../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PriceFilter = ({ maxPrice, maxPriceChangeValue }) => {\r\n    return (\r\n        <div className=\"filter mb-3\">\r\n            <span className=\"name-filter\">Max price: ${maxPrice}</span>\r\n            <Slider\r\n                xmax={100}\r\n                className=\"price-filter\"\r\n                axis=\"x\"\r\n                x={maxPrice}\r\n                onChange={({x}) => maxPriceChangeValue(x)}                    \r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        maxPrice: state.filter.maxPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        maxPriceChangeValue\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceFilter);","import React, { Component, Fragment } from 'react';\r\nimport SortFilter from './../SortFilter/SortFilter';\r\nimport CategoriesFilter from './../CategoriesFilter/CategoriesFilter';\r\nimport PriceFilter from './../PriceFilter/PriceFilter';\r\nimport './Filter.css';\r\n\r\nexport default class Filter extends Component {\r\n\r\n    state = {\r\n        openFilter: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if( window.innerWidth < 992 ) {\r\n            this.setState({\r\n                openFilter: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = (\r\n            <div className=\"filter-wrap\">\r\n                <SortFilter />\r\n                <CategoriesFilter />\r\n                <PriceFilter />\r\n            </div> \r\n        )\r\n        const openFilter = this.state.openFilter ? filter : null;\r\n        return (\r\n            <Fragment>\r\n                <button \r\n                    className=\"btn btn-primary btn-filter\"\r\n                    onClick={this.onClickFilter}>\r\n                    <i className=\"icon-filter fa fa-filter\"></i>\r\n                    Filter\r\n                    </button>\r\n                {openFilter}\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    onClickFilter = () => {\r\n        const openFilter = this.state.openFilter;\r\n        this.setState({\r\n            openFilter: !openFilter\r\n        })\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './BookListItem.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { id, title, author, price, img } = book;\r\n    return(\r\n        <div className=\"book-list-item mb-3\">\r\n            <div className=\"book-cover\">\r\n                <img src={img} alt={title} />\r\n            </div>\r\n            <div className=\"book-details text-center\">\r\n                <Link to={`/reStore/${id}`} className=\"book-title\">{title}</Link>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button \r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info add-to-cart\">\r\n                    Add to cart\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookListItem;","import React from 'react';\r\n\r\nconst {\r\n    Provider : BookstoreServiceProvider,\r\n    Consumer : BookstoreServiceConsumer\r\n} = React.createContext(); \r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n}","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return <Wrapped {...props} bookstoreService={bookstoreService} />\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default withBookstoreService;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div>loading...</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return(\r\n        <div>Error Fuck!!!</div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport BookListItem from '../BookListItem/BookListItem';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport withBookstoreService from './../hoc/with-bookstore-service';\r\nimport { booksLoaded, booksRequested, booksError, bookAddedToCart } from './../../actions';\r\nimport './BookList.css';\r\nimport Spinner from './../Spinner/Spinner';\r\nimport ErrorIndicator from './../ErrorIndicator/ErrorIndicator';\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { bookstoreService, \r\n                booksLoaded, \r\n                booksRequested, \r\n                booksError } = this.props;\r\n        booksRequested();\r\n        bookstoreService.getBooks()\r\n            .then((data) => booksLoaded(data))\r\n            .catch((err) => booksError(err));\r\n    }\r\n\r\n    render() {\r\n        const { books, error, loading, bookAddedToCart, searchTerm, checkedCategories, maxPrice, selectedSort } = this.props;\r\n        const renderBooks = onSearch(\r\n            onCategoriesFilter(\r\n                onMaxPriceFilter(\r\n                    onSortFilter(books, selectedSort), maxPrice), checkedCategories, maxPrice), searchTerm);\r\n        if( error ) {\r\n            return <ErrorIndicator />\r\n        }\r\n        if( loading ) {\r\n            return <Spinner />\r\n        }\r\n        return(\r\n            <BookList \r\n                books={renderBooks} \r\n                onAddedToCart={bookAddedToCart} />\r\n        )\r\n    }\r\n}\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n    return(\r\n        <ul className=\"row book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li \r\n                            className=\"col-6 col-sm-4 col-lg-3\"\r\n                            key={book.id}>\r\n                            <BookListItem \r\n                                onAddedToCart={() => onAddedToCart(book.id)}\r\n                                book={book} />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst onSearch = (books, searchTerm) => {\r\n    if( searchTerm.length === 0 ) return books;\r\n    return books.filter(({title}) => title.toLowerCase().includes(searchTerm.toLowerCase()) !== false );\r\n};\r\n\r\nconst onCategoriesFilter = (books, checkedCategories) => {\r\n    if( checkedCategories.length === 0 ) return books;\r\n    return books.filter(({category}) => checkedCategories.some(({name}) => category === name));\r\n};\r\n\r\nconst onMaxPriceFilter = (books, maxPrice) => {\r\n    if( maxPrice === 0 ) return books;\r\n    return books.filter(({price}) => price <= maxPrice);\r\n};\r\n\r\nconst onSortFilter = (books, sortValue) => {\r\n    switch(sortValue) {\r\n        case 'new':\r\n            return onFilter(books, 'id', -1);\r\n        case 'toExp':\r\n            return onFilter(books, 'price', 1);\r\n        case 'toCheap':\r\n            return onFilter(books, 'price', -1);\r\n        default:\r\n            return books;\r\n    }\r\n};\r\n\r\nconst onFilter = (books, property, quantity) => {\r\n    return books.sort((a,b) => (a[property] > b[property]) ? 1*quantity : ((b[property] > a[property]) ? -1*quantity : 0));\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.bookList.books,\r\n        loading: state.bookList.loading,\r\n        error: state.bookList.error,\r\n        searchTerm: state.filter.searchTerm,\r\n        checkedCategories: state.filter.checkedCategories,\r\n        maxPrice: state.filter.maxPrice,\r\n        selectedSort: state.filter.selectedSort\r\n        /* \r\n        передать свойство books в компонент (this.props.books), \r\n        значение которого взято из state\r\n        */\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        booksLoaded,\r\n        booksRequested,\r\n        booksError,\r\n        bookAddedToCart\r\n    }, dispatch);\r\n};\r\n/*\r\nПервый аргумент: обьект с action creators, \r\nкоторые будут нужны в этом компоненте!!!\r\nКак только мы вызовем booksLoaded, то bindActionCreators \r\nсоздаст действие и передаст все в метод dispatch\r\n\r\nАльтернатива:\r\nconst mapDispatchToProps = {\r\n    booksLoaded\r\n}\r\n*/\r\n\r\nexport default withBookstoreService()(connect(mapStateToProps, mapDispatchToProps)(BookListContainer));","import React from 'react';\r\nimport Filter from './../Filter/Filter';\r\nimport BookList from '../BookList/BookList';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-lg-3\">\r\n                <Filter />\r\n            </div>\r\n            <div className=\"col-12 col-lg-9\">\r\n                <BookList />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    bookAddedToCart, \r\n    bookDecreaseCart, \r\n    bookDeletedFromCart } from './../../actions';\r\nimport './ShoppingCartTable.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, bookAddedToCart, bookDecreaseCart, bookDeletedFromCart }) => {\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n        return(\r\n            <tr key={idx}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button \r\n                        onClick={ () => bookAddedToCart(id) }\r\n                        className=\"btn btn-outline-success\">\r\n                        <i className=\"fa fa-plus-circle\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDeletedFromCart(id) }\r\n                        className=\"btn btn-outline-danger\">\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDecreaseCart(id) }\r\n                        className=\"btn btn-outline-warning\">\r\n                        <i className=\"fa fa-minus-circle\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return(\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        items.map((item, idx) => renderRow(item, idx))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.shoppingCart.cartItems,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        bookDeletedFromCart,\r\n        bookAddedToCart,\r\n        bookDecreaseCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\r\nimport ShoppingCartTable from './../ShoppingCartTable/ShoppingCartTable';\r\n\r\nconst CartPage = () => {\r\n    return(\r\n        <ShoppingCartTable />\r\n    )\r\n}\r\n\r\nexport default CartPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { bookAddedToCart } from './../../actions';\r\nimport withBookstoreService from '../hoc/with-bookstore-service';\r\nimport './BookPage.css';\r\n\r\nclass BookPageContainer extends Component {\r\n\r\n    state = {\r\n        id: null,\r\n        title: '',\r\n        author: '',\r\n        description: '',\r\n        price: null,\r\n        img: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { bookId, bookstoreService } = this.props;\r\n        bookstoreService.getBook(bookId)\r\n            .then((book) => {\r\n                this.setState({\r\n                    id: bookId,\r\n                    title: book.title,\r\n                    author: book.author,\r\n                    description: book.description,\r\n                    price: book.price,\r\n                    img: book.img\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { id, title, author, price, description, img } = this.state;\r\n        const { bookAddedToCart } = this.props;\r\n        return (\r\n            <BookPage \r\n                id={id}\r\n                title={title}\r\n                author={author}\r\n                price={price}\r\n                description={description}\r\n                img={img}\r\n                bookAddedToCart={bookAddedToCart} />\r\n        );\r\n    }\r\n}\r\n\r\nconst BookPage = ({ id, title, author, price, description, img, bookAddedToCart }) => {\r\n    console.log(id);\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                {title} - {author}\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <img className=\"card-img-top card-img-custom\" src={img} alt={title} />\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\">${price}</p>\r\n                <p className=\"card-text\">{description}</p>\r\n                <button \r\n                    onClick={() => bookAddedToCart(+id)}\r\n                    className=\"btn btn-info add-to-cart\">\r\n                    Add to cart\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        bookAddedToCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default withBookstoreService()(connect(mapStateToProps, mapDispatchToProps)(BookPageContainer));","import React, { Component } from 'react';\r\nimport { formSubmitSearchTerm } from './../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchContainer extends Component {\r\n    state = {\r\n        searchTerm: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Search \r\n                onSubmit={this.onSubmit} \r\n                onChangeTerm={this.onChangeTerm} \r\n                searchTerm={this.state.searchTerm}\r\n                disableSubmit={this.state.disableSubmit} />\r\n        );\r\n    }\r\n\r\n    onChangeTerm = (e) => {\r\n        this.setState({\r\n            searchTerm: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const { formSubmitSearchTerm } = this.props;\r\n        e.preventDefault();\r\n        formSubmitSearchTerm(this.state.searchTerm);\r\n    }\r\n\r\n}\r\n\r\nconst Search = ({ onSubmit, onChangeTerm, searchTerm, disableSubmit }) => {\r\n    return (\r\n        <form \r\n            className=\"col-12 order-12 order-lg-0 col-lg-6\"\r\n            onSubmit={onSubmit}>\r\n            <div className=\"input-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Search\"\r\n                    onChange={onChangeTerm}\r\n                    value={searchTerm}\r\n                    />\r\n                <div className=\"input-group-append\">\r\n                    <button \r\n                        className=\"btn btn-primary\" \r\n                        type=\"submit\" >Search</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        formSubmitSearchTerm\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Search from './../Search/Search';\r\nimport './ShopHeader.css';\r\n\r\nconst ShopHeader = ({numItems, total}) => {\r\n    return(\r\n        <header className=\"row align-items-center shop-header mb-3\">\r\n            <Link to=\"/reStore\" className=\"col-6 col-lg-3 logo text-dark\">BookStore</Link>\r\n            <Search />\r\n            <Link to=\"/reStore/cart\" className=\"order text-right col-6 order-1 order-lg-0 col-lg-3\">\r\n                <i className=\"icon-cart fa fa-shopping-cart\"></i>\r\n                {numItems} items (${total})\r\n            </Link>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { \r\n    HomePage,\r\n    CartPage,\r\n    BookPage\r\n} from './../pages';\r\nimport ShopHeader from './../ShopHeader/ShopHeader';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({ numItems, total }) => {\r\n    return(\r\n        <main className=\"container\" role=\"main\">\r\n            <ShopHeader numItems={numItems} total={total} />\r\n            <Switch>\r\n                <Route path={\"/reStore/\"} component={HomePage} exact />\r\n                <Route path={\"/reStore/cart/\"} component={CartPage} />\r\n                <Route path={\"/reStore/:id/\"} render={({match}) => {\r\n                    const { id } = match.params;\r\n                    return <BookPage bookId={id} />\r\n                }} />\r\n            </Switch>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numItems: state.shoppingCart.cartItems.length,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if ( this.state.hasError ) return <ErrorIndicator></ErrorIndicator>\r\n        return this.props.children;\r\n    }\r\n}","export default class BookstoreService {\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Metro 2033',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 6.36,\r\n            category: 'post-apocalyptic',\r\n            description: `The year is 2033. The world has been reduced to rubble. \r\n                Humanity is nearly extinct. The half-destroyed cities have become \r\n                uninhabitable through radiation. Beyond their boundaries, they say, \r\n                lie endless burned-out deserts and the remains of splintered forests. \r\n                Survivors still remember the past greatness of humankind. But the last \r\n                remains of civilisation have already become a distant memory, the stuff \r\n                of myth and legend. More than 20 years have passed since the last plane \r\n                took off from the earth. Rusted railways lead into emptiness. The ether \r\n                is void and the airwaves echo to a soulless howling where previously the \r\n                frequencies were full of news from Tokyo, New York, Buenos Aires. Man has \r\n                handed over stewardship of the earth to new life-forms. Mutated by radiation, \r\n                they are better adapted to the new world. Man's time is over. A few score \r\n                thousand survivors live on, not knowing whether they are the only ones \r\n                left on earth. They live in the Moscow Metro - the biggest air-raid shelter \r\n                ever built. It is humanity's last refuge. Stations have become \r\n                mini-statelets, their people uniting around ideas, religions,\r\n                water-filters - or the simple need to repulse an enemy incursion. It \r\n                is a world without a tomorrow, with no room for dreams, plans, hopes. \r\n                Feelings have given way to instinct - the most important of which is \r\n                survival. Survival at any price. VDNKh is the northernmost inhabited \r\n                station on its line. It was one of the Metro's best stations and still \r\n                remains secure. But now a new and terrible threat has appeared. Artyom, \r\n                a young man living in VDNKh, is given the task of penetrating to the \r\n                heart of the Metro, to the legendary Polis, to alert everyone to the \r\n                awful danger and to get help. He holds the future of his native station \r\n                in his hands, the whole Metro - and maybe the whole of humanity. Read \r\n                by Rupert Degas (p) 2012 Orion Publishing Group`,\r\n            img: 'https://images2.medimops.eu/product/7a56c9/M03453529685-source.jpg'    \r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Metro 2034',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 7.99,\r\n            category: 'post-apocalyptic',\r\n            description: `The year is 2033. The world has been reduced to rubble. \r\n                Humanity is nearly extinct. The half-destroyed cities have become \r\n                uninhabitable through radiation. Beyond their boundaries, they say, \r\n                lie endless burned-out deserts and the remains of splintered forests. \r\n                Survivors still remember the past greatness of humankind. But the last \r\n                remains of civilisation have already become a distant memory, the stuff \r\n                of myth and legend. More than 20 years have passed since the last plane \r\n                took off from the earth. Rusted railways lead into emptiness. The ether \r\n                is void and the airwaves echo to a soulless howling where previously the \r\n                frequencies were full of news from Tokyo, New York, Buenos Aires. Man has \r\n                handed over stewardship of the earth to new life-forms. Mutated by radiation, \r\n                they are better adapted to the new world. Man's time is over. A few score \r\n                thousand survivors live on, not knowing whether they are the only ones \r\n                left on earth. They live in the Moscow Metro - the biggest air-raid shelter \r\n                ever built. It is humanity's last refuge. Stations have become \r\n                mini-statelets, their people uniting around ideas, religions,\r\n                water-filters - or the simple need to repulse an enemy incursion. It \r\n                is a world without a tomorrow, with no room for dreams, plans, hopes. \r\n                Feelings have given way to instinct - the most important of which is \r\n                survival. Survival at any price. VDNKh is the northernmost inhabited \r\n                station on its line. It was one of the Metro's best stations and still \r\n                remains secure. But now a new and terrible threat has appeared. Artyom, \r\n                a young man living in VDNKh, is given the task of penetrating to the \r\n                heart of the Metro, to the legendary Polis, to alert everyone to the \r\n                awful danger and to get help. He holds the future of his native station \r\n                in his hands, the whole Metro - and maybe the whole of humanity. Read \r\n                by Rupert Degas (p) 2012 Orion Publishing Group`,\r\n            img: 'https://images2.medimops.eu/product/230384/M03453316312-source.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Jurassic Park',\r\n            author: 'Michael Crichton',\r\n            price: 8.22,\r\n            category: 'fantasy',\r\n            description: `The year is 2033. The world has been reduced to rubble. \r\n                Humanity is nearly extinct. The half-destroyed cities have become \r\n                uninhabitable through radiation. Beyond their boundaries, they say, \r\n                lie endless burned-out deserts and the remains of splintered forests. \r\n                Survivors still remember the past greatness of humankind. But the last \r\n                remains of civilisation have already become a distant memory, the stuff \r\n                of myth and legend. `,\r\n            img: 'https://images2.medimops.eu/product/62a905/M0345381150X-source.jpg'\r\n        },\r\n        {\r\n            id: 5,\r\n            title: 'Asylum',\r\n            author: 'Madeleine Roux',\r\n            price: 4.87,\r\n            category: 'horror',\r\n            description: `The year is 2033. The world has been reduced to rubble. \r\n                Humanity is nearly extinct. The half-destroyed cities have become \r\n                uninhabitable through radiation. Beyond their boundaries, they say, \r\n                lie endless burned-out deserts and the remains of splintered forests. \r\n                Survivors still remember the past greatness of humankind. But the last \r\n                remains of civilisation have already become a distant memory, the stuff \r\n                of myth and legend. `,\r\n            img: 'https://images2.medimops.eu/product/d52d0a/M00062220969-source.jpg'\r\n        },\r\n        {\r\n            id: 6,\r\n            title: 'Metro 2035',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 9.99,\r\n            category: 'post-apocalyptic',\r\n            description: `The year is 2033. The world has been reduced to rubble. \r\n                Humanity is nearly extinct. The half-destroyed cities have become \r\n                uninhabitable through radiation. Beyond their boundaries, they say, \r\n                lie endless burned-out deserts and the remains of splintered forests. \r\n                Survivors still remember the past greatness of humankind. But the last \r\n                remains of civilisation have already become a distant memory, the stuff \r\n                of myth and legend. `,\r\n            img: 'https://images2.medimops.eu/product/eee1ed/M03453319028-source.jpg'\r\n        }\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // if( Math.random() > 0.75 ) {\r\n                //     reject(new Error('Something bad!!!'));\r\n                // }else{\r\n                //     resolve(this.data);\r\n                // }\r\n                resolve(this.data);\r\n            }, 700);\r\n        });\r\n    }\r\n\r\n    getBook = (bookId) => {\r\n        return new Promise((resolve) => {\r\n            resolve(this.data.find(({id}) => +id === +bookId));\r\n        }); \r\n    }\r\n\r\n}","const updateBookList = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOKS_REQUESTED': \r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'BOOKS_LOADED':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case 'BOOKS_ERROR':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            } \r\n        default:\r\n            return state.bookList;      \r\n    }\r\n};\r\n\r\nexport default updateBookList;","const updateShoppingCart = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n        case 'BOOK_DECREASE_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n        case 'BOOK_DELETED_FROM_CART':\r\n            const cartItem = state.shoppingCart.cartItems.find((item) => item.id === action.payload);\r\n            return updateOrder(state, action.payload, -cartItem.count);\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n};\r\n\r\nconst updateCartItem = (book, cartItem = {}, quantity) => {\r\n\r\n    const { \r\n        id = book.id,\r\n        count = 0,\r\n        title = book.title,\r\n        total = 0 } = cartItem;\r\n    \r\n    return {\r\n        id: id,\r\n        title: title,\r\n        count: count + quantity,\r\n        total: +(total + (quantity*book.price)).toFixed(2)\r\n    }\r\n};\r\n\r\nconst updateCartItems = (cartItems, newCartItem, cartItemIndex) => {\r\n\r\n    if( newCartItem.count === 0 ) {\r\n        return [\r\n            ...cartItems.slice(0, cartItemIndex),\r\n            ...cartItems.slice(cartItemIndex + 1)\r\n        ] \r\n    }\r\n\r\n    if( cartItemIndex === -1 ) {\r\n        return [\r\n            ...cartItems,\r\n            newCartItem          \r\n        ]\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0, cartItemIndex),\r\n        newCartItem,\r\n        ...cartItems.slice(cartItemIndex + 1)\r\n    ]\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems }} = state;\r\n    //ищем книгу по id\r\n    const book = books.find((item) => bookId === item.id );\r\n    //ищем позицию в корзине по id книги, если книга в корзине\r\n    //иначе -1\r\n    const cartItemIndex = cartItems.findIndex(({id}) => id === book.id); \r\n    //если cartItemIndex === -1, то item = undefined\r\n    const cartItem = cartItems[cartItemIndex];\r\n    const newCartItem = updateCartItem(book, cartItem, quantity);\r\n    const resultCartItems = updateCartItems(cartItems, newCartItem, cartItemIndex);\r\n    return {\r\n        cartItems: resultCartItems,\r\n        orderTotal: (resultCartItems.map(( {total} ) => total ).reduce((a = 0, b = 0) => a + b, 0)).toFixed(2)\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart;","const updateFilter = (state, action) => {\r\n\r\n    const sortTypes = [\r\n        { label: 'By novelty', value: 'new' },\r\n        { label: 'From cheap to expensive', value: 'toExp' },\r\n        { label: 'From expensive to cheap', value: 'toCheap' }\r\n    ]\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            searchTerm: '',\r\n            categories: [\r\n                { id: 1, label: 'Post-apocalyptic', name: 'post-apocalyptic', checked: false },\r\n                { id: 2, label: 'Fantasy', name: 'fantasy', checked: false },\r\n                { id: 3, label: 'Horror', name: 'horror', checked: false }\r\n            ],\r\n            checkedCategories: [],\r\n            maxPrice: 100,\r\n            sortTypes: sortTypes,\r\n            selectedSort: sortTypes[0].value\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'FORM_SUBMIT_SEARCH_TERM':\r\n            return {\r\n                ...state.filter,\r\n                searchTerm: action.payload\r\n            };\r\n        case 'CHECKBOX_CHANGE_STATUS':\r\n            return updateCategories(state, action.payload);\r\n        case 'MAXPRICE_CHANGE_VALUE':\r\n            return {\r\n                ...state.filter,\r\n                maxPrice: action.payload\r\n            };\r\n            case 'SORT_CHANGE_VALUE':\r\n                return {\r\n                    ...state.filter,\r\n                    selectedSort: action.payload\r\n                }\r\n            default:\r\n                return state.filter;\r\n    }\r\n\r\n}\r\n\r\nconst updateCategories = (state, checkId) => {\r\n    const { filter: { categories } } = state;\r\n    const indexItem = categories.findIndex(({id}) => id === checkId);\r\n    const newCategories = updateCategory(categories, indexItem);\r\n    return {\r\n        ...state.filter,\r\n        categories: newCategories,\r\n        checkedCategories: updateCheckedCategories(newCategories)\r\n    }\r\n};\r\n\r\nconst updateCategory = (categories, indexItem) => {\r\n    const item = categories[indexItem];\r\n    const newItem = { ...item, checked: !item.checked };\r\n    return [\r\n        ...categories.slice(0, indexItem),\r\n        newItem,\r\n        ...categories.slice(indexItem + 1)\r\n    ]\r\n};\r\n\r\nconst updateCheckedCategories = (categories) => {\r\n    const checkedCategories = categories.filter(({checked}) => checked === true);\r\n    return checkedCategories.map(({id, name}) => {\r\n        return { \r\n            id: id, \r\n            name: name \r\n        }\r\n    });\r\n};\r\n\r\nexport default updateFilter;","import updateBookList from './updateBookList';\r\nimport updateShoppingCart from './updateShoppingCart';\r\nimport updateFilter from './updateFilter';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action),\r\n        filter: updateFilter(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nimport App from './components/App/App';\r\nimport ErrorBoundry from './components/ErrorBoundry/ErrorBoundry';\r\nimport BookstoreService from './services/BookstoreService';\r\nimport { BookstoreServiceProvider } from './components/BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <ErrorBoundry>\r\n        <BookstoreServiceProvider value={bookstoreService}>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <App />\r\n            </Router>\r\n        </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n</Provider>\r\n, document.getElementById('root'));"],"sourceRoot":""}