{"version":3,"sources":["actions/index.js","components/CategoriesFilter/CategoriesFilter.js","components/PriceFilter/PriceFilter.js","components/Filter/Filter.js","components/BookListItem/BookListItem.js","components/BookstoreServiceContext/BookstoreServiceContext.js","components/hoc/with-bookstore-service.js","components/Spinner/Spinner.js","components/ErrorIndicator/ErrorIndicator.js","components/BookList/BookList.js","components/pages/HomePage.js","components/ShoppingCartTable/ShoppingCartTable.js","components/pages/CartPage.js","components/Search/Search.js","components/ShopHeader/ShopHeader.js","components/App/App.js","components/ErrorBoundry/ErrorBoundry.js","services/BookstoreService.js","reducers/updateBookList.js","reducers/updateShoppingCart.js","reducers/updateFilter.js","reducers/index.js","store.js","index.js"],"names":["booksLoaded","newBooks","type","payload","booksRequested","booksError","error","bookAddedToCart","bookId","bookDeletedFromCart","bookDecreaseCart","formSubmitSearchTerm","searchTerm","checkboxChangeStatus","name","maxPriceChangeValue","value","onChangeCheckbox","e","id","connect","state","categories","filter","dispatch","bindActionCreators","className","map","idx","label","checked","key","onChange","event","htmlFor","maxPrice","xmax","axis","x","Filter","BookListItem","book","onAddedToCart","title","author","price","img","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","Spinner","ErrorIndicator","BookListContainer","this","getBooks","then","data","catch","err","books","loading","checkedCategories","renderBooks","onSearch","onCategoriesFilter","onMaxPriceFilter","Component","BookList","length","toLowerCase","includes","category","some","bookList","HomePage","items","shoppingCart","cartItems","total","orderTotal","item","count","renderRow","CartPage","SearchContainer","onChangeTerm","setState","target","onSubmit","preventDefault","disableSubmit","Search","placeholder","ShopHeader","numItems","to","role","path","component","exact","ErrorBoundry","hasError","children","BookstoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateOrder","quantity","find","cartItemIndex","findIndex","cartItem","resultCartItems","newCartItem","slice","updateCartItems","toFixed","updateCartItem","reduce","a","b","updateShoppingCart","updateCategories","checkId","indexItem","newCategories","updateCategory","updateCheckedCategories","newItem","updateFilter","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"oWAAMA,EAAc,SAACC,GACjB,MAAO,CACHC,KAAM,eACNC,QAASF,IAIXG,EAAiB,WACnB,MAAO,CACHF,KAAM,oBAIRG,EAAa,SAACC,GAChB,MAAO,CACHJ,KAAM,cACNC,QAASG,IAIXC,EAAkB,SAACC,GACrB,MAAO,CACHN,KAAM,qBACNC,QAASK,IAIXC,EAAsB,SAACD,GACzB,MAAO,CACHN,KAAM,yBACNC,QAASK,IAIXE,EAAmB,SAACF,GACtB,MAAO,CACHN,KAAM,qBACNC,QAASK,IAIXG,EAAuB,SAACC,GAC1B,MAAO,CACHV,KAAM,0BACNC,QAASS,IAIXC,EAAuB,SAACC,GAC1B,MAAO,CACHZ,KAAM,yBACNC,QAASW,IAIXC,EAAsB,SAACC,GACzB,MAAO,CACHd,KAAM,wBACNC,QAASa,ICnBXC,G,MAAmB,SAACC,EAAGL,EAAsBM,GAC/CN,EAAqBM,KAeVC,eAZS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAME,OAAOD,eAIN,SAACE,GACxB,OAAOC,YAAmB,CACtBZ,wBACDW,KAGQJ,EAjDU,SAAC,GAA0C,IAAxCE,EAAuC,EAAvCA,WAAYT,EAA2B,EAA3BA,qBACpC,OACI,yBAAKa,UAAU,eACX,0BAAMA,UAAU,eAAhB,UACA,wBAAIA,UAAU,0BAENJ,EAAWK,KAAI,WAA+BC,GAAS,IAArCT,EAAoC,EAApCA,GAAIU,EAAgC,EAAhCA,MAAOf,EAAyB,EAAzBA,KAAMgB,EAAmB,EAAnBA,QAC/B,OACI,wBACIC,IAAKH,EACLF,UAAU,+BACV,yBAAKA,UAAU,cACX,2BACIA,UAAU,mBACVxB,KAAK,WACLc,MAAOF,EACPK,GAAIL,EACJkB,SAAU,SAACC,GAAD,OAAWhB,EAAiBgB,EAAOpB,EAAsBM,IACnEW,QAASA,IACb,yBAAKJ,UAAU,oBACf,2BAAOA,UAAU,mBAAmBQ,QAASpB,GACxCe,a,QCa1BT,G,MAAAA,aAZS,SAACC,GACrB,MAAO,CACHc,SAAUd,EAAME,OAAOY,aAIJ,SAACX,GACxB,OAAOC,YAAmB,CACtBV,uBACDS,KAGQJ,EAjCK,SAAC,GAAuC,IAArCe,EAAoC,EAApCA,SAAUpB,EAA0B,EAA1BA,oBAC7B,OACI,yBAAKW,UAAU,eACX,0BAAMA,UAAU,eAAhB,eAA2CS,GAC3C,kBAAC,IAAD,CACIC,KAAM,IACNV,UAAU,eACVW,KAAK,IACLC,EAAGH,EACHH,SAAU,gBAAEM,EAAF,EAAEA,EAAF,OAASvB,EAAoBuB,WCFxCC,G,MATA,WACX,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,S,wCCeGC,G,MArBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAClBC,EAA8BF,EAA9BE,MAAOC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,MAAOC,EAAQL,EAARK,IAC9B,OACI,yBAAKpB,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKqB,IAAKD,EAAKE,IAAKL,KAExB,yBAAKjB,UAAU,gBACX,0BAAMA,UAAU,cAAciB,GAC9B,yBAAKjB,UAAU,eAAekB,GAC9B,yBAAKlB,UAAU,cAAf,IAA8BmB,GAC9B,4BACII,QAASP,EACThB,UAAU,4BAFd,mB,ECTZwB,IAAMC,gBAFKC,E,EAAXC,SACWC,E,EAAXC,SCeWC,EAhBc,kBAAM,SAACC,GAEhC,OAAO,SAACC,GACJ,OACI,kBAACJ,EAAD,MAEQ,SAACK,GACG,OAAO,kBAACF,EAAD,iBAAaC,EAAb,CAAoBC,iBAAkBA,WCFtDC,G,MANC,WACZ,OACI,6CCIOC,EANQ,WACnB,OACI,+CCMFC,E,4LAEmB,IAAD,EAIOC,KAAKL,MAHpBC,EADQ,EACRA,iBACA3D,EAFQ,EAERA,YACAI,EAHQ,EAGRA,eACAC,EAJQ,EAIRA,WACRD,IACAuD,EAAiBK,WACZC,MAAK,SAACC,GAAD,OAAUlE,EAAYkE,MAC3BC,OAAM,SAACC,GAAD,OAAS/D,EAAW+D,Q,+BAGzB,IAAD,EACuFL,KAAKL,MAAzFW,EADH,EACGA,MAAO/D,EADV,EACUA,MAAOgE,EADjB,EACiBA,QAAS/D,EAD1B,EAC0BA,gBAAiBK,EAD3C,EAC2CA,WAAY2D,EADvD,EACuDA,kBAAmBpC,EAD1E,EAC0EA,SACzEqC,EAAcC,EAASC,EAAmBC,EAAiBN,EAAOlC,GAAWoC,EAAmBpC,GAAWvB,GACjH,OAAIN,EACO,kBAAC,EAAD,MAEPgE,EACO,kBAAC,EAAD,MAGP,kBAAC,EAAD,CACID,MAAOG,EACP9B,cAAenC,Q,GAzBCqE,aA8B1BC,EAAW,SAAC,GAA4B,IAA3BR,EAA0B,EAA1BA,MAAO3B,EAAmB,EAAnBA,cACtB,OACI,wBAAIhB,UAAU,iBAEN2C,EAAM1C,KAAI,SAACc,GACP,OACI,wBACIf,UAAU,iBACVK,IAAKU,EAAKtB,IACV,kBAAC,EAAD,CACIuB,cAAe,kBAAMA,EAAcD,EAAKtB,KACxCsB,KAAMA,UAShCgC,EAAW,SAACJ,EAAOzD,GACrB,OAA0B,IAAtBA,EAAWkE,OAAsBT,EAC9BA,EAAM9C,QAAO,mBAAwE,IAAxE,EAAEoB,MAAiBoC,cAAcC,SAASpE,EAAWmE,mBAGvEL,EAAqB,SAACL,EAAOE,GAC/B,OAAiC,IAA7BA,EAAkBO,OAAsBT,EACrCA,EAAM9C,QAAO,gBAAE0D,EAAF,EAAEA,SAAF,OAAgBV,EAAkBW,MAAK,gBAAEpE,EAAF,EAAEA,KAAF,OAAYmE,IAAanE,SAGlF6D,EAAmB,SAACN,EAAOlC,GAC7B,OAAiB,IAAbA,EAAwBkC,EACrBA,EAAM9C,QAAO,qBAAEsB,OAAoBV,MAsC/BqB,MAAuBpC,aAnCd,SAACC,GACrB,MAAO,CACHgD,MAAOhD,EAAM8D,SAASd,MACtBC,QAASjD,EAAM8D,SAASb,QACxBhE,MAAOe,EAAM8D,SAAS7E,MACtBM,WAAYS,EAAME,OAAOX,WACzB2D,kBAAmBlD,EAAME,OAAOgD,kBAChCpC,SAAUd,EAAME,OAAOY,aAQJ,SAACX,GACxB,OAAOC,YAAmB,CACtBzB,cACAI,iBACAC,aACAE,mBACDiB,KAc+BJ,CAA6C0C,IC7FpEsB,EAbE,WACb,OACI,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,mBACX,kBAAC,EAAD,SCqEDN,G,MAAAA,aAfS,SAACC,GACrB,MAAO,CACHgE,MAAOhE,EAAMiE,aAAaC,UAC1BC,MAAOnE,EAAMiE,aAAaG,eAIP,SAACjE,GACxB,OAAOC,YAAmB,CACtBhB,sBACAF,kBACAG,oBACDc,KAGQJ,EAvEW,SAAC,GAA8E,IAA5EiE,EAA2E,EAA3EA,MAAOG,EAAoE,EAApEA,MAAOjF,EAA6D,EAA7DA,gBAAiBG,EAA4C,EAA5CA,iBAAkBD,EAA0B,EAA1BA,oBA8B1E,OACI,yBAAKiB,UAAU,uBACX,0CACA,2BAAOA,UAAU,SACb,+BACI,4BACI,iCACA,qCACA,qCACA,qCACA,wCAGR,+BAEQ2D,EAAM1D,KAAI,SAAC+D,EAAM9D,GAAP,OA5CZ,SAAC8D,EAAM9D,GAAS,IACtBT,EAA4BuE,EAA5BvE,GAAIwB,EAAwB+C,EAAxB/C,MAAOgD,EAAiBD,EAAjBC,MAAOH,EAAUE,EAAVF,MAC1B,OACI,wBAAIzD,IAAKH,GACL,4BAAKA,EAAM,GACX,4BAAKe,GACL,4BAAKgD,GACL,gCAAMH,GACN,4BACI,4BACIvC,QAAU,kBAAM1C,EAAgBY,IAChCO,UAAU,2BACV,uBAAGA,UAAU,uBAEjB,4BACIuB,QAAU,kBAAMxC,EAAoBU,IACpCO,UAAU,0BACV,uBAAGA,UAAU,mBAEjB,4BACIuB,QAAU,kBAAMvC,EAAiBS,IACjCO,UAAU,2BACV,uBAAGA,UAAU,0BAsBYkE,CAAUF,EAAM9D,QAIrD,yBAAKF,UAAU,SAAf,WACa8D,QClDVK,EANE,WACb,OACI,kBAAC,EAAD,OCAFC,E,2MACFzE,MAAQ,CACJT,WAAY,I,EAahBmF,aAAe,SAAC7E,GACZ,EAAK8E,SAAS,CACVpF,WAAYM,EAAE+E,OAAOjF,S,EAI7BkF,SAAW,SAAChF,GAAO,IACPP,EAAyB,EAAK+C,MAA9B/C,qBACRO,EAAEiF,iBACFxF,EAAqB,EAAKU,MAAMT,a,wEAlBhC,OACI,kBAAC,EAAD,CACIsF,SAAUnC,KAAKmC,SACfH,aAAchC,KAAKgC,aACnBnF,WAAYmD,KAAK1C,MAAMT,WACvBwF,cAAerC,KAAK1C,MAAM+E,oB,GAXZxB,aA6BxByB,EAAS,SAAC,GAA2D,IAAzDH,EAAwD,EAAxDA,SAAUH,EAA8C,EAA9CA,aAAcnF,EAAgC,EAAhCA,WAAgC,EAApBwF,cAClD,OACI,0BACI1E,UAAU,kBACVwE,SAAUA,GACV,yBAAKxE,UAAU,eACX,2BACIxB,KAAK,OACLwB,UAAU,eACV4E,YAAY,SACZtE,SAAU+D,EACV/E,MAAOJ,IAEX,yBAAKc,UAAU,sBACX,4BACIA,UAAU,kBACVxB,KAAK,UAFT,cAqBLkB,eAZS,SAACC,GACrB,MAAO,MAKgB,SAACG,GACxB,OAAOC,YAAmB,CACtBd,wBACDa,KAGQJ,CAA6C0E,GCnD7CS,G,MAbI,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUhB,EAAW,EAAXA,MAC3B,OACI,4BAAQ9D,UAAU,wBACd,kBAAC,IAAD,CAAM+E,GAAG,IAAI/E,UAAU,kCAAvB,WACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAM+E,GAAG,SACL,uBAAG/E,UAAU,kDACZ8E,EAFL,YAEwBhB,EAFxB,QCkBGpE,eAPS,SAACC,GACrB,MAAO,CACHmF,SAAUnF,EAAMiE,aAAaC,UAAUT,OACvCU,MAAOnE,EAAMiE,aAAaG,cAInBrE,EAnBH,SAAC,GAAyB,IAAvBoF,EAAsB,EAAtBA,SAAUhB,EAAY,EAAZA,MACrB,OACI,0BAAM9D,UAAU,YAAYgF,KAAK,QAC7B,kBAAC,EAAD,CAAYF,SAAUA,EAAUhB,MAAOA,IACvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmB,KAAK,IAAIC,UAAWxB,EAAUyB,OAAK,IAC1C,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWf,SCX1BiB,E,2MAEjBzF,MAAQ,CACJ0F,UAAU,G,mFAIVhD,KAAKiC,SAAS,CAACe,UAAU,M,+BAIzB,OAAKhD,KAAK1C,MAAM0F,SAAkB,kBAAC,EAAD,MAC3BhD,KAAKL,MAAMsD,a,GAZgBpC,aCJrBqC,E,iDACjB/C,KAAO,CACH,CACI/C,GAAI,EACJwB,MAAO,aACPC,OAAQ,qBACRC,MAAO,KACPoC,SAAU,UACVnC,IAAK,sEAET,CACI3B,GAAI,EACJwB,MAAO,aACPC,OAAQ,qBACRC,MAAO,MACPoC,SAAU,mBACVnC,IAAK,uE,uDAID,IAAD,OACP,OAAO,IAAIoE,SAAQ,SAACC,EAASC,GACzBC,YAAW,WAMPF,EAAQ,EAAKjD,QACd,Y,0kBC7Bf,IAqCeoD,GArCQ,SAACjG,EAAOkG,GAE3B,QAAcC,IAAVnG,EACA,MAAO,CACHgD,MAAO,GACPC,SAAS,EACThE,MAAO,MAIf,OAAOiH,EAAOrH,MACV,IAAK,kBACD,OAAO,GAAP,GACOmB,EADP,CAEIgD,MAAO,GACPC,SAAS,EACThE,MAAO,OAEf,IAAK,eACD,OAAO,GAAP,GACOe,EADP,CAEIgD,MAAOkD,EAAOpH,QACdmE,SAAS,EACThE,MAAO,OAEf,IAAK,cACD,OAAO,GAAP,GACOe,EADP,CAEIgD,MAAO,GACPC,SAAS,EACThE,MAAOiH,EAAOpH,UAEtB,QACI,OAAOkB,EAAM8D,W,SC4BnBsC,GAAc,SAACpG,EAAOb,EAAQkH,GAAc,IAC1BrD,EAAwChD,EAApD8D,SAAYd,MAAyBkB,EAAelE,EAA/BiE,aAAgBC,UAEvC9C,EAAO4B,EAAMsD,MAAK,SAACjC,GAAD,OAAUlF,IAAWkF,EAAKvE,MAG5CyG,EAAgBrC,EAAUsC,WAAU,qBAAE1G,KAAesB,EAAKtB,MAE1D2G,EAAWvC,EAAUqC,GAErBG,EAjCc,SAACxC,EAAWyC,EAAaJ,GAE7C,OAA0B,IAAtBI,EAAYrC,MACN,GAAN,oBACOJ,EAAU0C,MAAM,EAAGL,IAD1B,aAEOrC,EAAU0C,MAAML,EAAgB,MAIpB,IAAnBA,EACM,GAAN,oBACOrC,GADP,CAEIyC,IAIF,GAAN,oBACOzC,EAAU0C,MAAM,EAAGL,IAD1B,CAEII,GAFJ,aAGOzC,EAAU0C,MAAML,EAAgB,KAcfM,CAAgB3C,EAjDrB,SAAC9C,GAAmC,IAA7BqF,EAA4B,uDAAjB,GAAIJ,EAAa,yCAMpCI,EAHd3G,UAHkD,MAG7CsB,EAAKtB,GAHwC,IAMpC2G,EAFdnC,aAJkD,MAI1C,EAJ0C,IAMpCmC,EADdnF,aALkD,MAK1CF,EAAKE,MALqC,IAMpCmF,EAAdtC,aANkD,MAM1C,EAN0C,EAQtD,MAAO,CACHrE,GAAIA,EACJwB,MAAOA,EACPgD,MAAOA,EAAQ+B,EACflC,QAASA,EAASkC,EAASjF,EAAKI,OAAQsF,QAAQ,IAoChCC,CAAe3F,EAAMqF,EAAUJ,GACaE,GAChE,MAAO,CACHrC,UAAWwC,EACXtC,WAAYsC,EAAgBpG,KAAI,qBAAG6D,SAAoB6C,QAAO,eAACC,EAAD,uDAAK,EAAGC,EAAR,uDAAY,EAAZ,OAAkBD,EAAIC,IAAG,KAIhFC,GA9EY,SAACnH,EAAOkG,GAE/B,QAAcC,IAAVnG,EACA,MAAO,CACHkE,UAAW,GACXE,WAAY,GAIpB,OAAO8B,EAAOrH,MACV,IAAK,qBACD,OAAOuH,GAAYpG,EAAOkG,EAAOpH,QAAS,GAC9C,IAAK,qBACD,OAAOsH,GAAYpG,EAAOkG,EAAOpH,SAAU,GAC/C,IAAK,yBACD,IAAM2H,EAAWzG,EAAMiE,aAAaC,UAAUoC,MAAK,SAACjC,GAAD,OAAUA,EAAKvE,KAAOoG,EAAOpH,WAChF,OAAOsH,GAAYpG,EAAOkG,EAAOpH,SAAU2H,EAASnC,OACxD,QACI,OAAOtE,EAAMiE,e,6jBClBzB,IAkCMmD,GAAmB,SAACpH,EAAOqH,GAAa,IACxBpH,EAAiBD,EAA3BE,OAAUD,WACZqH,EAAYrH,EAAWuG,WAAU,qBAAE1G,KAAeuH,KAClDE,EAAgBC,GAAevH,EAAYqH,GACjD,OAAO,MACAtH,EAAME,OADb,CAEID,WAAYsH,EACZrE,kBAAmBuE,GAAwBF,MAI7CC,GAAiB,SAACvH,EAAYqH,GAChC,IAAMjD,EAAOpE,EAAWqH,GAClBI,EAAO,MAAQrD,EAAR,CAAc5D,SAAU4D,EAAK5D,UAC1C,MAAM,GAAN,oBACOR,EAAW2G,MAAM,EAAGU,IAD3B,CAEII,GAFJ,aAGOzH,EAAW2G,MAAMU,EAAY,MAIlCG,GAA0B,SAACxH,GAE7B,OAD0BA,EAAWC,QAAO,mBAA2B,IAA3B,EAAEO,WACrBH,KAAI,YACzB,MAAO,CACHR,GAFqC,EAAdA,GAGvBL,KAHqC,EAAVA,UAQxBkI,GAjEM,SAAC3H,EAAOkG,GAEzB,QAAcC,IAAVnG,EACA,MAAO,CACHT,WAAY,GACZU,WAAY,CACR,CAAEH,GAAI,EAAGU,MAAO,mBAAoBf,KAAM,mBAAoBgB,SAAS,GACvE,CAAEX,GAAI,EAAGU,MAAO,UAAWf,KAAM,UAAWgB,SAAS,GACrD,CAAEX,GAAI,EAAGU,MAAO,SAAUf,KAAM,SAAUgB,SAAS,IAEvDyC,kBAAmB,GACnBpC,SAAU,KAIlB,OAAOoF,EAAOrH,MACV,IAAK,0BACD,OAAO,MACAmB,EAAME,OADb,CAEIX,WAAY2G,EAAOpH,UAE3B,IAAK,yBACD,OAAOsI,GAAiBpH,EAAOkG,EAAOpH,SAC1C,IAAK,wBACD,OAAO,MACAkB,EAAME,OADb,CAEIY,SAAUoF,EAAOpH,UAErB,QACA,OAAOkB,EAAME,SCjBV0H,GARC,SAAC5H,EAAOkG,GACpB,MAAO,CACHpC,SAAUmC,GAAejG,EAAOkG,GAChCjC,aAAckD,GAAmBnH,EAAOkG,GACxChG,OAAQyH,GAAa3H,EAAOkG,KCHrB2B,GAFDC,YAAYF,ICUpBtF,GAAmB,IAAIsD,EAE7BmC,IAASC,OACT,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,EAAD,KACI,kBAAC9F,EAAD,CAA0BpC,MAAO2C,IAC7B,kBAAC,IAAD,KACI,kBAAC,EAAD,UAKd2F,SAASC,eAAe,W","file":"static/js/main.3814b326.chunk.js","sourcesContent":["const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'BOOKS_LOADED',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'BOOKS_REQUESTED'\r\n    }\r\n}\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'BOOKS_ERROR',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDeletedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DELETED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst bookDecreaseCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DECREASE_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst formSubmitSearchTerm = (searchTerm) => {\r\n    return {\r\n        type: 'FORM_SUBMIT_SEARCH_TERM',\r\n        payload: searchTerm\r\n    }\r\n}\r\n\r\nconst checkboxChangeStatus = (name) => {\r\n    return {\r\n        type: 'CHECKBOX_CHANGE_STATUS',\r\n        payload: name\r\n    }\r\n}\r\n\r\nconst maxPriceChangeValue = (value) => {\r\n    return {\r\n        type: 'MAXPRICE_CHANGE_VALUE',\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport {\r\n    booksLoaded,\r\n    booksRequested,\r\n    booksError,\r\n    bookAddedToCart,\r\n    bookDeletedFromCart,\r\n    bookDecreaseCart,\r\n    formSubmitSearchTerm,\r\n    checkboxChangeStatus,\r\n    maxPriceChangeValue\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { checkboxChangeStatus } from '../../actions';\r\nimport './CategoriesFilter.css';\r\n\r\nconst CategoriesFilter = ({ categories, checkboxChangeStatus }) => {\r\n    return (\r\n        <div className=\"filter mb-3\">\r\n            <span className=\"name-filter\">Genres</span>\r\n            <ul className=\"list-group genres mb-3\">\r\n                {\r\n                    categories.map(({ id, label, name, checked }, idx) => {\r\n                        return (\r\n                            <li \r\n                                key={idx}\r\n                                className=\"list-group-item genres-item\">\r\n                                <div className=\"form-check\">\r\n                                    <input \r\n                                        className=\"form-check-input\" \r\n                                        type=\"checkbox\" \r\n                                        value={name} \r\n                                        id={name}\r\n                                        onChange={(event) => onChangeCheckbox(event, checkboxChangeStatus, id)}\r\n                                        checked={checked} />\r\n                                    <div className=\"check-indicator\"></div>\r\n                                    <label className=\"form-check-label\" htmlFor={name}>\r\n                                        {label}\r\n                                    </label>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst onChangeCheckbox = (e, checkboxChangeStatus, id) => {\r\n    checkboxChangeStatus(id);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.filter.categories\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        checkboxChangeStatus\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesFilter);","import React from 'react';\r\nimport Slider from 'react-input-slider';\r\nimport './PriceFilter.css';\r\nimport { maxPriceChangeValue } from './../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PriceFilter = ({ maxPrice, maxPriceChangeValue }) => {\r\n    return (\r\n        <div className=\"filter mb-3\">\r\n            <span className=\"name-filter\">Max price: ${maxPrice}</span>\r\n            <Slider\r\n                xmax={300}\r\n                className=\"price-filter\"\r\n                axis=\"x\"\r\n                x={maxPrice}\r\n                onChange={({x}) => maxPriceChangeValue(x)}                    \r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\n// const maxPriceFromBooks = (books) => {\r\n//     const prices = books.map(({price}) => price);\r\n//     console.log(Math.max(...prices));\r\n//     return Math.max(...prices);\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        maxPrice: state.filter.maxPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        maxPriceChangeValue\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceFilter);","import React, { Fragment } from 'react';\r\nimport CategoriesFilter from './../CategoriesFilter/CategoriesFilter';\r\nimport PriceFilter from './../PriceFilter/PriceFilter';\r\nimport './Filter.css';\r\n\r\nconst Filter = () => {\r\n    return (\r\n        <Fragment>\r\n            <CategoriesFilter />\r\n            <PriceFilter />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport './BookListItem.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, img } = book;\r\n    return(\r\n        <div className=\"book-list-item mb-3\">\r\n            <div className=\"book-cover\">\r\n                <img src={img} alt={title} />\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button \r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info add-to-cart\">\r\n                    Add to cart\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookListItem;","import React from 'react';\r\n\r\nconst {\r\n    Provider : BookstoreServiceProvider,\r\n    Consumer : BookstoreServiceConsumer\r\n} = React.createContext(); \r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n}","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return <Wrapped {...props} bookstoreService={bookstoreService} />\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default withBookstoreService;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div>loading...</div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return(\r\n        <div>Error Fuck!!!</div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport BookListItem from '../BookListItem/BookListItem';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport withBookstoreService from './../hoc/with-bookstore-service';\r\nimport { booksLoaded, booksRequested, booksError, bookAddedToCart } from './../../actions';\r\nimport './BookList.css';\r\nimport Spinner from './../Spinner/Spinner';\r\nimport ErrorIndicator from './../ErrorIndicator/ErrorIndicator';\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { bookstoreService, \r\n                booksLoaded, \r\n                booksRequested, \r\n                booksError } = this.props;\r\n        booksRequested();\r\n        bookstoreService.getBooks()\r\n            .then((data) => booksLoaded(data))\r\n            .catch((err) => booksError(err));\r\n    }\r\n\r\n    render() {\r\n        const { books, error, loading, bookAddedToCart, searchTerm, checkedCategories, maxPrice } = this.props;\r\n        const renderBooks = onSearch(onCategoriesFilter(onMaxPriceFilter(books, maxPrice), checkedCategories, maxPrice), searchTerm);\r\n        if( error ) {\r\n            return <ErrorIndicator />\r\n        }\r\n        if( loading ) {\r\n            return <Spinner />\r\n        }\r\n        return(\r\n            <BookList \r\n                books={renderBooks} \r\n                onAddedToCart={bookAddedToCart} />\r\n        )\r\n    }\r\n}\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n    return(\r\n        <ul className=\"row book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li \r\n                            className=\"col-6 col-sm-3\"\r\n                            key={book.id}>\r\n                            <BookListItem \r\n                                onAddedToCart={() => onAddedToCart(book.id)}\r\n                                book={book} />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst onSearch = (books, searchTerm) => {\r\n    if( searchTerm.length === 0 ) return books;\r\n    return books.filter(({title}) => title.toLowerCase().includes(searchTerm.toLowerCase()) !== false );\r\n};\r\n\r\nconst onCategoriesFilter = (books, checkedCategories) => {\r\n    if( checkedCategories.length === 0 ) return books;\r\n    return books.filter(({category}) => checkedCategories.some(({name}) => category === name));\r\n}\r\n\r\nconst onMaxPriceFilter = (books, maxPrice) => {\r\n    if( maxPrice === 0 ) return books;\r\n    return books.filter(({price}) => price <= maxPrice);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.bookList.books,\r\n        loading: state.bookList.loading,\r\n        error: state.bookList.error,\r\n        searchTerm: state.filter.searchTerm,\r\n        checkedCategories: state.filter.checkedCategories,\r\n        maxPrice: state.filter.maxPrice\r\n        /* \r\n        передать свойство books в компонент (this.props.books), \r\n        значение которого взято из state\r\n        */\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        booksLoaded,\r\n        booksRequested,\r\n        booksError,\r\n        bookAddedToCart\r\n    }, dispatch);\r\n};\r\n/*\r\nПервый аргумент: обьект с action creators, \r\nкоторые будут нужны в этом компоненте!!!\r\nКак только мы вызовем booksLoaded, то bindActionCreators \r\nсоздаст действие и передаст все в метод dispatch\r\n\r\nАльтернатива:\r\nconst mapDispatchToProps = {\r\n    booksLoaded\r\n}\r\n*/\r\n\r\nexport default withBookstoreService()(connect(mapStateToProps, mapDispatchToProps)(BookListContainer));","import React from 'react';\r\nimport Filter from './../Filter/Filter';\r\nimport BookList from '../BookList/BookList';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-lg-3\">\r\n                <Filter />\r\n            </div>\r\n            <div className=\"col-12 col-lg-9\">\r\n                <BookList />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    bookAddedToCart, \r\n    bookDecreaseCart, \r\n    bookDeletedFromCart } from './../../actions';\r\nimport './ShoppingCartTable.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, bookAddedToCart, bookDecreaseCart, bookDeletedFromCart }) => {\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n        return(\r\n            <tr key={idx}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button \r\n                        onClick={ () => bookAddedToCart(id) }\r\n                        className=\"btn btn-outline-success\">\r\n                        <i className=\"fa fa-plus-circle\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDeletedFromCart(id) }\r\n                        className=\"btn btn-outline-danger\">\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => bookDecreaseCart(id) }\r\n                        className=\"btn btn-outline-warning\">\r\n                        <i className=\"fa fa-minus-circle\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return(\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        items.map((item, idx) => renderRow(item, idx))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.shoppingCart.cartItems,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        bookDeletedFromCart,\r\n        bookAddedToCart,\r\n        bookDecreaseCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\r\nimport ShoppingCartTable from './../ShoppingCartTable/ShoppingCartTable';\r\n\r\nconst CartPage = () => {\r\n    return(\r\n        <ShoppingCartTable />\r\n    )\r\n}\r\n\r\nexport default CartPage;","import React, { Component } from 'react';\r\nimport { formSubmitSearchTerm } from './../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchContainer extends Component {\r\n    state = {\r\n        searchTerm: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Search \r\n                onSubmit={this.onSubmit} \r\n                onChangeTerm={this.onChangeTerm} \r\n                searchTerm={this.state.searchTerm}\r\n                disableSubmit={this.state.disableSubmit} />\r\n        );\r\n    }\r\n\r\n    onChangeTerm = (e) => {\r\n        this.setState({\r\n            searchTerm: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const { formSubmitSearchTerm } = this.props;\r\n        e.preventDefault();\r\n        formSubmitSearchTerm(this.state.searchTerm);\r\n    }\r\n\r\n}\r\n\r\nconst Search = ({ onSubmit, onChangeTerm, searchTerm, disableSubmit }) => {\r\n    return (\r\n        <form \r\n            className=\"col-12 col-md-6\"\r\n            onSubmit={onSubmit}>\r\n            <div className=\"input-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Search\"\r\n                    onChange={onChangeTerm}\r\n                    value={searchTerm}\r\n                    />\r\n                <div className=\"input-group-append\">\r\n                    <button \r\n                        className=\"btn btn-primary\" \r\n                        type=\"submit\" >Search</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        formSubmitSearchTerm\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Search from './../Search/Search';\r\nimport './ShopHeader.css';\r\n\r\nconst ShopHeader = ({numItems, total}) => {\r\n    return(\r\n        <header className=\"row shop-header mb-3\">\r\n            <Link to=\"/\" className=\"col-12 col-md-3 logo text-dark\">ReStore</Link>\r\n            <Search />\r\n            <Link to=\"/cart\">\r\n                <i className=\"col-12 col-md-3 icon-cart fa fa-shopping-cart\"></i>\r\n                {numItems} items (${total})\r\n            </Link>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { \r\n    HomePage,\r\n    CartPage\r\n} from './../pages';\r\nimport ShopHeader from './../ShopHeader/ShopHeader';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({ numItems, total }) => {\r\n    return(\r\n        <main className=\"container\" role=\"main\">\r\n            <ShopHeader numItems={numItems} total={total} />\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact />\r\n                <Route path=\"/cart\" component={CartPage} />\r\n            </Switch>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numItems: state.shoppingCart.cartItems.length,\r\n        total: state.shoppingCart.orderTotal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if ( this.state.hasError ) return <ErrorIndicator></ErrorIndicator>\r\n        return this.props.children;\r\n    }\r\n}","export default class BookstoreService {\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Metro 2033',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 6.36,\r\n            category: 'fantasy',\r\n            img: 'https://images2.medimops.eu/product/7a56c9/M03453529685-source.jpg'    \r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Metro 2034',\r\n            author: 'Dmitriy Gluhovskiy',\r\n            price: 16.99,\r\n            category: 'post-apocalyptic',\r\n            img: 'https://images2.medimops.eu/product/230384/M03453316312-source.jpg'\r\n        }\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // if( Math.random() > 0.75 ) {\r\n                //     reject(new Error('Something bad!!!'));\r\n                // }else{\r\n                //     resolve(this.data);\r\n                // }\r\n                resolve(this.data);\r\n            }, 700);\r\n        });\r\n    }\r\n\r\n}","const updateBookList = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOKS_REQUESTED': \r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'BOOKS_LOADED':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case 'BOOKS_ERROR':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            } \r\n        default:\r\n            return state.bookList;      \r\n    }\r\n};\r\n\r\nexport default updateBookList;","const updateShoppingCart = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n        case 'BOOK_DECREASE_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n        case 'BOOK_DELETED_FROM_CART':\r\n            const cartItem = state.shoppingCart.cartItems.find((item) => item.id === action.payload);\r\n            return updateOrder(state, action.payload, -cartItem.count);\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n};\r\n\r\nconst updateCartItem = (book, cartItem = {}, quantity) => {\r\n\r\n    const { \r\n        id = book.id,\r\n        count = 0,\r\n        title = book.title,\r\n        total = 0 } = cartItem;\r\n    \r\n    return {\r\n        id: id,\r\n        title: title,\r\n        count: count + quantity,\r\n        total: +(total + (quantity*book.price)).toFixed(2)\r\n    }\r\n};\r\n\r\nconst updateCartItems = (cartItems, newCartItem, cartItemIndex) => {\r\n\r\n    if( newCartItem.count === 0 ) {\r\n        return [\r\n            ...cartItems.slice(0, cartItemIndex),\r\n            ...cartItems.slice(cartItemIndex + 1)\r\n        ] \r\n    }\r\n\r\n    if( cartItemIndex === -1 ) {\r\n        return [\r\n            ...cartItems,\r\n            newCartItem          \r\n        ]\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0, cartItemIndex),\r\n        newCartItem,\r\n        ...cartItems.slice(cartItemIndex + 1)\r\n    ]\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems }} = state;\r\n    //ищем книгу по id\r\n    const book = books.find((item) => bookId === item.id );\r\n    //ищем позицию в корзине по id книги, если книга в корзине\r\n    //иначе -1\r\n    const cartItemIndex = cartItems.findIndex(({id}) => id === book.id); \r\n    //если cartItemIndex === -1, то item = undefined\r\n    const cartItem = cartItems[cartItemIndex];\r\n    const newCartItem = updateCartItem(book, cartItem, quantity);\r\n    const resultCartItems = updateCartItems(cartItems, newCartItem, cartItemIndex);\r\n    return {\r\n        cartItems: resultCartItems,\r\n        orderTotal: resultCartItems.map(( {total} ) => total ).reduce((a = 0, b = 0) => a + b, 0)\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart;","const updateFilter = (state, action) => {\r\n\r\n    if( state === undefined ) {\r\n        return {\r\n            searchTerm: '',\r\n            categories: [\r\n                { id: 1, label: 'Post-apocalyptic', name: 'post-apocalyptic', checked: false },\r\n                { id: 2, label: 'Fantasy', name: 'fantasy', checked: false },\r\n                { id: 3, label: 'Horror', name: 'horror', checked: false }\r\n            ],\r\n            checkedCategories: [],\r\n            maxPrice: 100\r\n        }\r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'FORM_SUBMIT_SEARCH_TERM':\r\n            return {\r\n                ...state.filter,\r\n                searchTerm: action.payload\r\n            };\r\n        case 'CHECKBOX_CHANGE_STATUS':\r\n            return updateCategories(state, action.payload);\r\n        case 'MAXPRICE_CHANGE_VALUE':\r\n            return {\r\n                ...state.filter,\r\n                maxPrice: action.payload\r\n            };\r\n            default:\r\n            return state.filter;\r\n    }\r\n\r\n}\r\n\r\nconst updateCategories = (state, checkId) => {\r\n    const { filter: { categories } } = state;\r\n    const indexItem = categories.findIndex(({id}) => id === checkId);\r\n    const newCategories = updateCategory(categories, indexItem);\r\n    return {\r\n        ...state.filter,\r\n        categories: newCategories,\r\n        checkedCategories: updateCheckedCategories(newCategories)\r\n    }\r\n};\r\n\r\nconst updateCategory = (categories, indexItem) => {\r\n    const item = categories[indexItem];\r\n    const newItem = { ...item, checked: !item.checked };\r\n    return [\r\n        ...categories.slice(0, indexItem),\r\n        newItem,\r\n        ...categories.slice(indexItem + 1)\r\n    ]\r\n};\r\n\r\nconst updateCheckedCategories = (categories) => {\r\n    const checkedCategories = categories.filter(({checked}) => checked === true);\r\n    return checkedCategories.map(({id, name}) => {\r\n        return { \r\n            id: id, \r\n            name: name \r\n        }\r\n    });\r\n};\r\n\r\nexport default updateFilter;","import updateBookList from './updateBookList';\r\nimport updateShoppingCart from './updateShoppingCart';\r\nimport updateFilter from './updateFilter';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action),\r\n        filter: updateFilter(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nimport App from './components/App/App';\r\nimport ErrorBoundry from './components/ErrorBoundry/ErrorBoundry';\r\nimport BookstoreService from './services/BookstoreService';\r\nimport { BookstoreServiceProvider } from './components/BookstoreServiceContext/BookstoreServiceContext';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <ErrorBoundry>\r\n        <BookstoreServiceProvider value={bookstoreService}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n</Provider>\r\n, document.getElementById('root'));"],"sourceRoot":""}